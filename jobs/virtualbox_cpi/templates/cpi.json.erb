<%=

params = {
  "host" => p("host"),
  "username" => p("username"),
  "private_key" => p("private_key"),

  "bin_path" => p("bin_path"),
  "store_dir" => p("store_dir"),

  "agent" => {
    "ntp" => p("ntp")
  }
}

agent_params = params["agent"]

if_p("blobstore") do
  agent_params["blobstore"] = {
   "provider" => p("blobstore.provider"),
   "options" => {}
  }

  blobstore = agent_params["blobstore"]

  if p("blobstore.provider") == "s3"
    blobstore["options"] = {
      "bucket_name" => p("blobstore.bucket_name"),
      "credentials_source" => p(["agent.blobstore.credentials_source", "blobstore.credentials_source"]),
      "access_key_id" => p(["agent.blobstore.access_key_id", "blobstore.access_key_id"], nil),
      "secret_access_key" => p(["agent.blobstore.secret_access_key", "blobstore.secret_access_key"], nil),
    }

    def update_blobstore_options(blobstore, manifest_key, rendered_key=manifest_key)
      value = p(["agent.blobstore.#{manifest_key}", "blobstore.#{manifest_key}"], nil)
      blobstore["options"][rendered_key] = value unless value.nil?
    end

    update_blobstore_options(blobstore, "use_ssl")
    update_blobstore_options(blobstore, "s3_port", "port")
    update_blobstore_options(blobstore, "host")
    update_blobstore_options(blobstore, "s3_force_path_style")
    update_blobstore_options(blobstore, "ssl_verify_peer")
    update_blobstore_options(blobstore, "s3_multipart_threshold")
    update_blobstore_options(blobstore, "s3_signature_version", "signature_version")
    update_blobstore_options(blobstore, "s3_region", "region")

  elsif p("blobstore.provider") == "local"
    blobstore["options"] = {
      "blobstore_path" => p("blobstore.path")
    }
  else
    blobstore["options"] = {
      "endpoint" => "http://#{p(["agent.blobstore.address", "blobstore.address"])}:#{p("blobstore.port")}",
      "user" => p("blobstore.agent.user"),
      "password" => p("blobstore.agent.password")
    }
  end
end

if_p("agent.mbus") do |mbus|
  agent_params["mbus"] = mbus
end.else_if_p("nats") do
  agent_params["mbus"] = "nats://#{p("nats.user")}:#{p("nats.password")}@#{p(["agent.nats.address", "nats.address"])}:#{p("nats.port")}"
end

JSON.dump(params)

%>
